#pragma checksum "C:\Users\logan\aspnetgenerator\CRUDGenerator\Views\Home\GetStarted.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "69928705edba2c66b3a14f6761a89b0b99bfdf73"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_GetStarted), @"mvc.1.0.view", @"/Views/Home/GetStarted.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/GetStarted.cshtml", typeof(AspNetCore.Views_Home_GetStarted))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\logan\aspnetgenerator\CRUDGenerator\Views\_ViewImports.cshtml"
using CRUDGenerator;

#line default
#line hidden
#line 2 "C:\Users\logan\aspnetgenerator\CRUDGenerator\Views\_ViewImports.cshtml"
using CRUDGenerator.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"69928705edba2c66b3a14f6761a89b0b99bfdf73", @"/Views/Home/GetStarted.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"50934adf44e6db53c10f26bb31e2cea4d5a31ecc", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_GetStarted : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\logan\aspnetgenerator\CRUDGenerator\Views\Home\GetStarted.cshtml"
  
    ViewData["Title"] = "Get Started Using This";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(107, 6, true);
            WriteLiteral("\r\n<h1>");
            EndContext();
            BeginContext(114, 28, false);
#line 7 "C:\Users\logan\aspnetgenerator\CRUDGenerator\Views\Home\GetStarted.cshtml"
Write(ViewData["Title"].ToString());

#line default
#line hidden
            EndContext();
            BeginContext(142, 2361, true);
            WriteLiteral(@"</h1>

<p>The concept is simple: define a model for the object you're going to be manipulating on the forms.<br />
    So when you download this, you'll find a file in the Models folder called TargetModel.cs. This is where you're going to define your model.</p><p>
    I don't recommend going too crazy with your model definition because I'm fucking busy and I havne't had time to make this much smarter than I needed for my own projects when I started writing this system. That means its not going to do things like render more complicated controls - yet. I'll get there eventually but for now there are limitation.</p>

<h3>Limitations</h3>
<p>
    These are pretty much things I'm getting to but currently haven't added in yet.
</p>
<ul>
    <li>It won't render DropDownLists yet.</li>
    <li>It won't render CheckBoxes yet - fuck CheckBoxLists though. If you wanna add that shit, be my guest, but let me know first so I can add you to the project as a contributor.</li>
    <li>RadioButtons or RadioButtonL");
            WriteLiteral(@"ists are also a no-go.</li>
</ul>

<p>That's all I can think of right now. Its late and I'm tired. Shut up.<br />
    On a serious note, if you want to do anything that the system isn't specifically written to cater for, it'll just output a textbox. This may be sub optimal for your specific requirement - I don't care.</p>

<p>
    For now, the generator basically just outputs ASP TextBox controls anyway. If the property on your model is an int, it'll give you a TexBox with TextMode=""Number"".<br />
    DateTime is a data type I use quite a lot so I made sure to cater for that. Awesome right? The system will generate markup for a <a href=""https://demos.telerik.com/aspnet-ajax/datetimepicker/overview/defaultcs.aspx"" target=""_blank"">Telerik RadDateTimePicker control</a>.
</p>

<h3>Summary</h3>
<p>So if you're going to use this generator I made, you need to define your data model in Models\TargetModel.cs as the basis for your form fields.<br />
Keep it simple because the generator doesn't really cater");
            WriteLiteral(@" for much right now.</p>
<p>
    Here's a bonus tip because I'm not a total cunt: don't change the name of the class defined in TargetModel.cs'. That way you don't have to go into the controllers and change anything there - it's just less work.
</p>
<p>
    Enjoy using this I guess or don't; whatever.
</p>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
